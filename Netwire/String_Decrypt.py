import idaapi
import idautils
import idc
import ida_search
import re
import string

key = "_BqwHaF8TkKDMfOzQASx4VuXdZibUIeylJWhj0m5o2ErLt6vGRN9sY1n3Ppc7g-C"

Decrypt_Func = 0x4081AA

Xrefs = []
for ref in idautils.XrefsTo(Decrypt_Func):
    Xrefs.append(ref.frm)

for xref in Xrefs:
    prev_ins = xref
    count = 1
    while (count<5):
        prev_ins = ida_search.find_code(prev_ins, SEARCH_UP | SEARCH_NEXT)
        mnem = idc.print_insn_mnem(prev_ins)
        if mnem == 'mov':
            src_addr = idc.get_operand_value(prev_ins,1)
            if (src_addr < 0x400000):
                count+=1
                continue
            else:
                string = str(idc.get_strlit_contents(src_addr,-1,-1))
                decrypted = ''
                if(string == 'None'):
                    continue
                for i in range(len(string)):
                    char = string[i]
                    if char not in key:
                        decrypted += char
                        continue
                    for j in range(len(key)):
                        if char == key[j]:
                            position = j+6
                            position = (j+6) & 0x3F
                            decrypted += key[position]
                decrypted = decrypted[1:] #unsure why theres a bug where first letter J
                idc.set_cmt(xref,decrypted,1)
                break
                            
                    
