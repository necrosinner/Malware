from wincrypto import CryptCreateHash, CryptHashData, CryptDeriveKey, CryptEncrypt, CryptImportKey, CryptExportKey, CryptDecrypt
from wincrypto.constants import CALG_SHA1, CALG_AES_256, bType_SIMPLEBLOB
from binascii import unhexlify
import hashlib

with open('C:\\Users\\Chester Ng\\Downloads\\pub_pri_keyblob.bin','rb') as file:
    priv = file.read()


rsa_key = CryptImportKey(priv)

with open('C:\\Users\\Chester Ng\\Downloads\\session_keyblob.bin','rb') as file:
    session_key = file.read()

aes_key = CryptImportKey(session_key,rsa_key)


with open('C:\\Users\\Chester Ng\\Downloads\\DSC0001_original','rb') as file:
    sample_file = file.read()

shellcode = sample_file[:0x114]

sha256_hash = sample_file[-0x20:]


sample_file = sample_file[0x114:-0x20]

#print(hex(len(sample_file)))

test = CryptDecrypt(aes_key, sample_file)

#print(hex(len(test)))

shellcode_len = 0x3b3c-0x2e50

refresh_token_location = shellcode_len+0x54A0

refresh_token_size = 0x14E

client_id_location = refresh_token_location + 0x150

client_id_size = 0x24

#print(test[refresh_token_location:refresh_token_location+refresh_token_size])

#print(test[client_id_location:client_id_location+client_id_size])
#print(test[-0x1e0:])

test = bytearray(test)

my_refresh = b'M.C106_BAY.-CYn3L3BU9d5nH*ao*I8ZuvkAuCvIkWgdDMfBhAXsWA5TznqcgcBFkfZECwpj1ru7Wqj17sP5t2e*Fqyi3AEr9r9cXPdNbh5HFl2M7RpdxeLrvjTQTX*wvsUN!bY8Av9ejSmkJUgCIU24OjmWeiNvnIc76fAz8D5gWFFlKfvdBrAde0HNsUU472mmDtV!Yo5WgDiMBEi5bzB861SL99csklxHEVqLKr6h1MeH8uMKi1Xbtp!svdv54nhT4HjhmmU1xhvc1LINBPOTWgi46lEOp!Ymprk9NksRzEMM0FEkByRgjQuqSf*IOQre1ZSFN5fDgmiGUp04mm3KcBlblf8AkUIJYLwU!y152RLG50i2ooNNS0ySEyzNyJcqflFUNyb3AOwXKTmyZYJ61!g9tcEukk5VNBGaMzQGjPiDL4ZfwbpDFC9aDWBn6Idn6cWML5o2ew$$'
my_client = b'9d9a1da3-70a9-4b74-9e13-c62497a0d42e'

#print(hex(len(my_refresh)))

#test[shellcode_len+0x6c18:] = my_refresh


test.replace(test[client_id_location:client_id_location+client_id_size], my_client)

#replacing the byte sequence that finds our refresh_token
#test[shellcode_len+0x400+0x144f+0x3:shellcode_len+0x400+0x144f+0x3+0x2] = b'\xc2\x8b'

test = bytes(test)

with open("for_reference", 'wb') as file:
    file.write(test[shellcode_len:])

new_hash = hashlib.sha256(test).digest()

#print(test[-0x1e0:])

#print(test[client_id_location:client_id_location+client_id_size])

encrypted = CryptEncrypt(aes_key, test)

#print(hex(len(encrypted)))

new_file = shellcode + encrypted + new_hash

with open("DSC0001", 'wb') as file:
    file.write(new_file)

print("successfully generated file")

