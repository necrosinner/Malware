import idaapi
import idautils
import idc
import re
import string
import xml.etree.ElementTree as ET
import ida_funcs

#data is saved from scylla tree
data = ET.parse("data.xml")

root = data.getroot()

mydict = {}
#update dictionary for valid import addresses to WinApi Name
for child in root:
    for imports in child:
        if (imports.tag == 'import_valid'):
            mydict[imports.attrib['address_va']] = imports.attrib['name']

#lst is obtained from ExtractVA.py
lst = ['75005A1E', '7502B357', '750087E1', '75001222', '75001245', '7500110C', '750010FF', '7501EE91',
       '75005DB6', '750011C0', '750017A1', '750059D3', '75001282', '750013E0', '750011F8', '753FE17D',
       '7500180E', '75001245', '75001136', '753FE17D', '75734800', '757345BD', '7572CE99', '757345CD',
       '757345DD', '75084B9F', '750027F9', '750011F8', '75001222', '75001245', '750110B5', '750011C0',
       '750013E0', '750059D3', '75002674', '7502BF2C', '75005A1E', '75001AD0', '7502B357', '750017D9',
       '753E7D3F', '753F734E', '7573424C', '757347A8', '75734234', '74E0B57E', '74E385B3', '76E87410',
       '76E5D340', '76E9F720', '76EE92A0', '76EE9330', '76F55430', '76E5D500', '76F6AC30', '76ED4780',
       '76E8FF50', '76E806E0', '74A68920', '75001136', '750042C8', '75005123', '750016D0', '7502842D',
       '750089CB', '750011F8', '750048D7', '75001222', '7500110C', '75001245', '75003E6C', '750024D4',
       '750013E0', '75004B6B', '750011C0', '7501D822', '750010FF', '750017D9', '75004850', '75007A28',
       '753E9ACD', '776A26DD', '753F6F69', '753F0EDC', '753F206C', '753F3FBD', '753FCE8C', '757340BE',
       '75733F7A', '75734234', '757470A4', '757633B4', '757278DC', '757278F4', '757470D4', '7573424C',
       '75734016', '7572C9B4', '7573403B', '7573405E', '7572A8CD', '7572A8E5', '7572C70E', '757335CC',
       '7572C9CC', '75A99EB8', '74E385B3', '74E308C5', '74E39BEB', '75023232', '7501B708', '750059D3',
       '750048D7', '75001222', '753FE17D', '76C13C5F', '76C13AB2', '76C13EB8', '76C137AD', '76C12FE7',
       '76C12D8B', '76C13084', '76C168F5', '76C1669F', '76C16826', '76C1449D', '76C13918', '76C141B6',
       '76C16C19', '76C2771B', '75023232', '776A4320', '776A3DBD', '776922C0', '77692280', '750016F5',
       '750024D4', '75001136', '750013E0', '750010FF', '7500180E', '75005A1E', '7500110C', '75001420',
       '750011F8', '750016AD', '75001695', '750011C0', '75022BCA', '750059D3', '753FE17D', '76C12D8B',
       '76C12D8B', '76C13AB2', '76C13C5F', '76E5D340', '76E806E0', '76E8FF50', '76E86DC0', '76ED4780',
       '76E9F720', '76EE92A0', '76EE9330', '76E7FB80', '76E5D500', '76F6AC30', '76E84540', '76AF41E0',
       '75001222', '750048D7', '75023232', '776A4320', '776A3DBD', '776922C0', '77692280', '750016F5',
       '750024D4', '75001136', '750013E0', '750010FF', '7500180E', '75005A1E', '7500110C', '75001420',
       '750011F8', '750016AD', '75001695', '75002644', '750011C0', '76C2771B', '76C13C5F', '76C12D8B',
       '76C137AD', '76C13AB2', '76C12D8B', '76C134B5', '76C13EB8', '76C141B6', '76C14582', '76C130AF',
       '76C1449D', '76C13918', '76C1D414', '75023232', '776A4320', '776A3DBD', '776922C0', '77692280',
       '750016F5', '750024D4', '75001136', '750013E0', '750010FF', '7500180E', '75005A1E', '7500110C',
       '75001420', '750011F8', '750016AD', '75001695', '75002644', '75001222', '750048D7', '750011C0',
       '75022BCA', '750059D3', '76C13C5F', '76C13AB2', '76C134B5', '76C137AD', '76C13EB8', '76C141B6',
       '76C14582', '76C130AF', '76C12D8B', '76C1449D', '76C13918', '76C12D8B', '76C1D414']
#sub_addr also obtained from ExtractVA.py
sub_addr = [237569, 237579, 237589, 237599, 237609, 237619, 237629, 237639, 237649, 237659, 237669, 237679, 237689, 237699, 237709, 237719, 1531905, 1531915, 1531925, 1531935, 1531945, 1531955, 1531965, 1531975, 1531985, 1609729, 1609739, 1609749, 1609759, 1609769, 1609779, 1609789, 1609799, 1609809, 1609819, 1609829, 1609839, 1609849, 1609859, 1609869, 1609879, 1609889, 1609899, 1609909, 1609919, 1609929, 1609939, 1609949, 1609959, 1609969, 1609979, 1609989, 1609999, 1610009, 1610019, 1610029, 1610039, 1610049, 1610059, 2465793, 2465803, 2465813, 2465823, 2465833, 2465843, 2465853, 2465863, 2465873, 2465883, 2465893, 2465903, 2465913, 2465923, 2465933, 2465943, 2465953, 2465963, 2465973, 2465983, 2465993, 2466003, 2466013, 2466023, 2466033, 2466043, 2466053, 2466063, 2466073, 2466083, 2466093, 2466103, 2466113, 2466123, 2466133, 2466143, 2466153, 2466163, 2466173, 2466183, 2466193, 2466203, 2466213, 2466223, 2466233, 2466243, 2466253, 2466263, 2466273, 2466283, 2510849, 2510859, 2510869, 2510879, 2510889, 2510899, 2510909, 2510919, 2510929, 2510939, 2510949, 2510959, 2510969, 2510979, 2510989, 2510999, 2511009, 2511019, 2511029, 2511039, 2511049, 2580481, 2580491, 2580501, 2580511, 2580521, 2580531, 2580541, 2580551, 2580561, 2580571, 2580581, 2580591, 2580601, 2580611, 2580621, 2580631, 2580641, 2580651, 2580661, 2580671, 2580681, 2580691, 2580701, 2580711, 2580721, 2580731, 2580741, 2580751, 2580761, 2580771, 2580781, 2580791, 2580801, 2580811, 2580821, 2580831, 2580841, 2580851, 2650113, 2650123, 2650133, 2650143, 2650153, 2650163, 2650173, 2650183, 2650193, 2650203, 2650213, 2650223, 2650233, 2650243, 2650253, 2650263, 2650273, 2650283, 2650293, 2650303, 2650313, 2650323, 2650333, 2650343, 2650353,
            2650363, 2650373, 2650383, 2650393, 2650403, 2650413, 2650423, 2650433, 2650443, 2650453, 2715649, 2715659, 2715669, 2715679, 2715689, 2715699, 2715709, 2715719, 2715729, 2715739, 2715749, 2715759, 2715769, 2715779, 2715789, 2715799, 2715809, 2715819, 2715829, 2715839, 2715849, 2715859, 2715869, 2715879, 2715889, 2715899, 2715909, 2715919, 2715929, 2715939, 2715949, 2715959, 2715969, 2715979, 2715989, 2715999]

newlst = []

for i in range(len(lst)):
    if (lst[i] in mydict):
        newlst.append(str(sub_addr[i])+':'+mydict[lst[i]])

print(newlst)
        
def do_rename(line):
    splitted = line.split(':')
    straddr = splitted[0]
    strname = splitted[1]

    eaaddr = int(straddr)
    print(str(hex(eaaddr)))
    idc.set_name(eaaddr, strname, flags=0x801)

for i in newlst:
    do_rename(i)
