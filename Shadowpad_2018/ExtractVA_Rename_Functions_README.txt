Instructions for these scripts:

You must have an active session of Shadowpad running on a debugger, and our IDA binary we are analyzing MUST BE DUMPED FROM MEMORY.
You must use Scylla to correlate virtual addresses to API calls

ExtractVA.py & Rename_Functions.py

For the sample that i had reversed, the way Shadowpad hides some of its api calls is through performing a neg operation on the api it wants to call, then patching
the binary such that instead of direct API calls, it will a subroutine which contains 
1) Mov Eax, [negative virtual address of API call]
2) Neg Eax
3) jmp Eax

we run ExtractVA.py in IDA to extract all the subroutines which contain these API calls, and also the address value of its correspondent API calls.

From here, we need to edit these these address values within any available address of our current debugging session.
We then point Scylla to this memory region to determine what api calls these virtual addresses belong to.

Then, we export Scylla's results in a xml file and drop it in the same folder as Rename_Functions.py as "data.xml"

Replace the values in Rename_Functions with the values you have found in Extract_VA.

Then, simply run the script in IDA to rename all our subroutine calls and we're done!
