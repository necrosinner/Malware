from Crypto.Cipher import ARC4

headers = []
rc4_size_dict = {}
my_dict = {}
#Rename test2 as filename with encrypted content
with open("test2","rb") as f:
    count = 0
    mybytes = bytearray([])
    for i in range(10):
        mybytes += (f.read(1))
    headers.append(mybytes)
    while(True):
        size = (headers[count][6] << 24) + (headers[count][7] << 16) + (headers[count][8] << 8) + headers[count][9]
        headers[count][1] = 0
        if bytes(headers[count][:6]) not in my_dict:
            my_dict[bytes(headers[count][:6])] = bytearray([])
            rc4_size_dict[bytes(headers[count][:6])] = headers[count][6:]
        for i in range(size):
            my_dict[bytes(headers[count][:6])] += f.read(1)
        mybytes = bytearray([])
        for i in range(10):
            mybytes += f.read(1)
        if(mybytes == bytearray([])):
            break
        headers.append(mybytes)
        count += 1


with open("Decrypted.txt", "w") as f:
  for i in my_dict.keys():
      key = i
      ciphertext = my_dict[key]
      rc4_key = bytearray(key) + bytearray(rc4_size_dict[key])
      cipher = ARC4.new(rc4_key)
      msg = cipher.encrypt(ciphertext)
      try:
          to_write = msg.decode("utf-16")[1:]
          f.write(to_write)
      except:
          to_write = str(msg)
          to_write = to_write[2:len(to_write)-1]
          f.write(to_write)
      f.write('\n')


